import { Long } from "bson";
import { FriendDeleteStruct } from "../talk/struct/api/friends/friend-delete-struct";
import { FriendFindIdStruct, FriendFindUUIDStruct } from "../talk/struct/api/friends/friend-find-struct";
import { FriendListStruct } from "../talk/struct/api/friends/friend-list-struct";
import { FriendNicknameStruct } from "../talk/struct/api/friends/friend-nickname-struct";
import { FriendReqPhoneNumberStruct, FriendReqStruct } from "../talk/struct/api/friends/friend-req-struct";
import { FriendSearchStruct } from "../talk/struct/api/friends/friend-search-struct";
import { ProfileReqStruct } from "../talk/struct/api/profile/profile-req-struct";
import { WebApiStruct } from "../talk/struct/web-api-struct";
import { SessionApiClient } from "./web-api-client";
export declare class ServiceClient extends SessionApiClient {
    get Scheme(): string;
    get Host(): string;
    get Agent(): string;
    canChangeUUID(uuid: string): Promise<WebApiStruct>;
    changeUUID(uuid: string): Promise<WebApiStruct>;
    addFriend(id: Long, pa?: string): Promise<FriendReqStruct>;
    addFriendWithPhoneNumber(nickname: string, countryIso: string, countryCode: string, phoneNumber: string): Promise<FriendReqPhoneNumberStruct>;
    removeFriend(id: Long): Promise<FriendReqStruct>;
    removeFriendList(idList: Long[]): Promise<FriendDeleteStruct>;
    hideFriend(id: Long, pa?: string): Promise<WebApiStruct>;
    unhideFriend(id: Long): Promise<WebApiStruct>;
    searchFriends(query: string, pageNum?: number, pageSize?: number): Promise<FriendSearchStruct>;
    findFriendById(id: Long): Promise<FriendFindIdStruct>;
    findFriendByUUID(uuid: string): Promise<FriendFindUUIDStruct>;
    requestFriendList(types?: string[], eventTypes?: string[], token?: Long): Promise<FriendListStruct>;
    setNickname(id: Long, nickname: string): Promise<FriendNicknameStruct>;
    addFavoriteFriends(idList: Long[]): Promise<WebApiStruct>;
    removeFavoriteFriend(id: Long): Promise<WebApiStruct>;
    requestMusicList(id: Long): Promise<WebApiStruct>;
    requestMyProfile(): Promise<ProfileReqStruct>;
    requestProfile(id: Long): Promise<ProfileReqStruct>;
    getPreviewURL(url: string): Promise<WebApiStruct>;
    static getAccountApiPath(agent: string, api: string): string;
    static getFriendsApiPath(agent: string, api: string): string;
    static getProfileApiPath(agent: string, api: string): string;
    static getProfile3ApiPath(agent: string, api: string): string;
    static getScrapApiPath(agent: string, api: string): string;
}
