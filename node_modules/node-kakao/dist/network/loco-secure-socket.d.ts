/// <reference types="node" />
import { LocoBasicSocket } from "./loco-socket";
import { CryptoManager } from "../secure/crypto-manager";
import * as net from "net";
import { LocoReceiver } from "../loco/loco-interface";
export declare class LocoSecureSocket extends LocoBasicSocket {
    private crypto;
    private handshaked;
    constructor(pubKey: string, receiver: LocoReceiver, host: string, port: number, keepAlive: boolean);
    get Handshaked(): boolean;
    protected pipeTranformation(socket: net.Socket): void;
    protected transformBuffer(data: Buffer): Buffer;
    connect(): Promise<boolean>;
    handshake(): Promise<boolean>;
    protected sendHandshakePacket(): Promise<boolean>;
    protected createSocketConnection(host: string, port: number, callback: () => void): net.Socket;
    get Crypto(): CryptoManager;
    protected onConnect(): void;
    protected onConnected(): void;
    protected onEnd(buffer: Buffer): void;
    protected onError(err: Error): void;
}
