import { LocoBsonRequestPacket, LocoBsonResponsePacket } from "./loco-bson-packet";
import { Long } from "bson";
import { MemberStruct } from "../talk/struct/member-struct";
import { ChannelType } from "../talk/channel/channel-type";
import { OpenMemberStruct, OpenLinkMemberStruct } from "../talk/struct/open/open-link-struct";
export declare class PacketChatOnRoomReq extends LocoBsonRequestPacket {
    ChannelId: Long;
    Token: Long;
    OpenToken: number;
    constructor(ChannelId?: Long, Token?: Long, OpenToken?: number);
    get PacketName(): string;
    toBodyJson(): any;
}
export declare class PacketChatOnRoomRes extends LocoBsonResponsePacket {
    ChannelId: Long;
    MemberList?: (MemberStruct | OpenMemberStruct)[] | undefined;
    MemberIdList?: Long[] | undefined;
    Type: ChannelType;
    WatermarkUserIdList: Long[];
    WatermarkList: Long[];
    OpenChatToken: number;
    ClientOpenProfile?: OpenLinkMemberStruct | undefined;
    constructor(status: number, ChannelId?: Long, MemberList?: (MemberStruct | OpenMemberStruct)[] | undefined, MemberIdList?: Long[] | undefined, Type?: ChannelType, WatermarkUserIdList?: Long[], WatermarkList?: Long[], OpenChatToken?: number, ClientOpenProfile?: OpenLinkMemberStruct | undefined);
    get PacketName(): string;
    readBodyJson(rawData: any): void;
}
