"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PacketBuyCallServerRes = exports.PacketBuyCallServerReq = void 0;
const loco_bson_packet_1 = require("../loco-bson-packet");
const bson_1 = require("bson");
class PacketBuyCallServerReq extends loco_bson_packet_1.LocoBsonRequestPacket {
    constructor(UserId = bson_1.Long.ZERO, Os = '', NetType = 0, Appver = '', NetworkMccMnc = '', CountryIso = '') {
        super();
        this.UserId = UserId;
        this.Os = Os;
        this.NetType = NetType;
        this.Appver = Appver;
        this.NetworkMccMnc = NetworkMccMnc;
        this.CountryIso = CountryIso;
    }
    get PacketName() {
        return 'BUYCS';
    }
    toBodyJson() {
        return {
            'userId': this.UserId,
            'os': this.Os,
            'ntype': this.NetType,
            'appVer': this.Appver,
            'MCCMNC': this.NetworkMccMnc,
            'countryISO': this.CountryIso
        };
    }
}
exports.PacketBuyCallServerReq = PacketBuyCallServerReq;
class PacketBuyCallServerRes extends loco_bson_packet_1.LocoBsonResponsePacket {
    constructor(status, CallServerHost = '', CallServerPort = 0, CallServerHostV6 = '', VssHost = '', VssPort = '', VssHostV6 = '') {
        super(status);
        this.CallServerHost = CallServerHost;
        this.CallServerPort = CallServerPort;
        this.CallServerHostV6 = CallServerHostV6;
        this.VssHost = VssHost;
        this.VssPort = VssPort;
        this.VssHostV6 = VssHostV6;
    }
    get PacketName() {
        return 'BUYCS';
    }
    readBodyJson(rawData) {
        this.CallServerHost = rawData['cshost'];
        this.CallServerPort = rawData['csport'];
        this.CallServerHostV6 = rawData['cshost6'];
        this.VssHost = rawData['vsshost'];
        this.VssPort = rawData['vssport'];
        this.VssHostV6 = rawData['vsshost6'];
    }
}
exports.PacketBuyCallServerRes = PacketBuyCallServerRes;
//# sourceMappingURL=packet-buy-call-server.js.map