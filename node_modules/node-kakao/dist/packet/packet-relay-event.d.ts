import { LocoBsonRequestPacket, LocoBsonResponsePacket } from "./loco-bson-packet";
import { Long } from "bson";
import { ChatType } from "../talk/chat/chat-type";
import { RelayEventType } from "../talk/relay/relay-event-type";
export declare class PacketRelayEventReq extends LocoBsonRequestPacket {
    LinkId: Long;
    ChannelId: Long;
    EventType: RelayEventType;
    EventCount: number;
    LogId: Long;
    Type: ChatType;
    constructor(LinkId?: Long, ChannelId?: Long, EventType?: RelayEventType, EventCount?: number, LogId?: Long, Type?: ChatType);
    get PacketName(): string;
    toBodyJson(): {
        li: Long;
        c: Long;
        et: RelayEventType;
        ec: number;
        logId: Long;
        t: ChatType;
    };
}
export declare class PacketRelayEventRes extends LocoBsonResponsePacket {
    LinkId: Long;
    ChannelId: Long;
    EventType: RelayEventType;
    EventCount: number;
    LogId: Long;
    Type: ChatType;
    AutherId: Long;
    constructor(status: number, LinkId?: Long, ChannelId?: Long, EventType?: RelayEventType, EventCount?: number, LogId?: Long, Type?: ChatType, AutherId?: Long);
    get PacketName(): string;
    readBodyJson(rawData: any): void;
}
