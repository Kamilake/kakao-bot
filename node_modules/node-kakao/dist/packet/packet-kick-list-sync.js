"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PacketKickListSyncRes = exports.PacketKickListSyncReq = void 0;
const loco_bson_packet_1 = require("./loco-bson-packet");
const bson_1 = require("bson");
const open_link_struct_1 = require("../talk/struct/open/open-link-struct");
const json_proxy_mapper_1 = require("json-proxy-mapper");
class PacketKickListSyncReq extends loco_bson_packet_1.LocoBsonRequestPacket {
    constructor(LinkId = bson_1.Long.ZERO) {
        super();
        this.LinkId = LinkId;
    }
    get PacketName() {
        return 'KLSYNC';
    }
    toBodyJson() {
        return { li: this.LinkId };
    }
}
exports.PacketKickListSyncReq = PacketKickListSyncReq;
class PacketKickListSyncRes extends loco_bson_packet_1.LocoBsonResponsePacket {
    constructor(status, KickedMemberList = []) {
        super(status);
        this.KickedMemberList = KickedMemberList;
    }
    get PacketName() {
        return 'KLSYNC';
    }
    readBodyJson(rawData) {
        this.KickedMemberList = [];
        if (rawData['kickMembers']) {
            for (let rawKickedMem of rawData['kickMembers']) {
                this.KickedMemberList.push(json_proxy_mapper_1.Serializer.deserialize(rawKickedMem, open_link_struct_1.OpenKickedMemberStruct.MAPPER));
            }
        }
    }
}
exports.PacketKickListSyncRes = PacketKickListSyncRes;
//# sourceMappingURL=packet-kick-list-sync.js.map