"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PacketGetClientMetaRes = exports.PacketGetClientMetaReq = void 0;
const loco_bson_packet_1 = require("./loco-bson-packet");
const json_util_1 = require("../util/json-util");
class PacketGetClientMetaReq extends loco_bson_packet_1.LocoBsonRequestPacket {
    constructor() {
        super();
    }
    get PacketName() {
        return 'GETMCMETA';
    }
    toBodyJson() {
        return {};
    }
}
exports.PacketGetClientMetaReq = PacketGetClientMetaReq;
class PacketGetClientMetaRes extends loco_bson_packet_1.LocoBsonResponsePacket {
    constructor(status, ChannelIdList = [], RawClientMetaList = []) {
        super(status);
        this.ChannelIdList = ChannelIdList;
        this.RawClientMetaList = RawClientMetaList;
    }
    get PacketName() {
        return 'GETMCMETA';
    }
    readBodyJson(rawData) {
        this.ChannelIdList = [];
        if (rawData['chatIds']) {
            for (let channelId of rawData['chatIds']) {
                this.ChannelIdList.push(json_util_1.JsonUtil.readLong(channelId));
            }
        }
        this.RawClientMetaList = [];
        if (rawData['metas']) {
            for (let rawMeta of rawData['metas']) {
                this.RawClientMetaList.push(rawMeta);
            }
        }
    }
}
exports.PacketGetClientMetaRes = PacketGetClientMetaRes;
//# sourceMappingURL=packet-get-client-meta.js.map