import { LocoBsonRequestPacket, LocoBsonResponsePacket } from "./loco-bson-packet";
import { Long } from "bson";
import { OpenProfileType, OpenLinkType } from "../talk/open/open-link-type";
import { ChannelInfoStruct } from "../talk/struct/channel-info-struct";
import { OpenLinkStruct } from "../talk/struct/open/open-link-struct";
import { OpenLinkProfileContent } from "../talk/open/open-link-profile-template";
export declare class PacketCreateOpenLinkReq extends LocoBsonRequestPacket {
    Name: string;
    LinkImagePath: string;
    LinkType: OpenLinkType;
    Description: string;
    ProfileContent: OpenLinkProfileContent | null;
    AllowAnonProfile: boolean;
    CanSearchLink: boolean;
    CreatedTime: Long;
    Activated: boolean;
    ChannelLimit: number;
    ProfileType: OpenProfileType;
    Nickname: string;
    ProfilePath: string;
    ProfileLinkId: Long;
    UserLimit: number;
    constructor(Name?: string, LinkImagePath?: string, LinkType?: OpenLinkType, Description?: string, ProfileContent?: OpenLinkProfileContent | null, AllowAnonProfile?: boolean, CanSearchLink?: boolean, CreatedTime?: Long, Activated?: boolean, ChannelLimit?: number, ProfileType?: OpenProfileType, Nickname?: string, ProfilePath?: string, ProfileLinkId?: Long, UserLimit?: number);
    get PacketName(): string;
    toBodyJson(): any;
}
export declare class PacketCreateOpenLinkRes extends LocoBsonResponsePacket {
    OpenLink?: OpenLinkStruct | undefined;
    ChatInfo?: ChannelInfoStruct | undefined;
    constructor(status: number, OpenLink?: OpenLinkStruct | undefined, ChatInfo?: ChannelInfoStruct | undefined);
    get PacketName(): string;
    readBodyJson(rawData: any): void;
}
