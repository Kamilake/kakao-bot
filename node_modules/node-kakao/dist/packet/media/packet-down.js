"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PacketDownRes = exports.PacketDownReq = void 0;
const bson_1 = require("bson");
const loco_bson_packet_1 = require("../loco-bson-packet");
const media_request_base_packet_1 = require("./media-request-base-packet");
class PacketDownReq extends media_request_base_packet_1.MediaRequestBasePacket {
    constructor(Key = '', Offset = 0, ChannelId = bson_1.Long.ZERO, Rt = true, userId = bson_1.Long.ZERO, os = '', version = '', networkType = 0, networkMccMnc = '') {
        super(userId, os, version, networkType, networkMccMnc);
        this.Key = Key;
        this.Offset = Offset;
        this.ChannelId = ChannelId;
        this.Rt = Rt;
    }
    get PacketName() {
        return 'DOWN';
    }
    toBodyJson() {
        let obj = {
            'k': this.Key,
            'c': this.ChannelId,
            'o': this.Offset,
            'rt': this.Rt
        };
        return Object.assign(obj, super.toBodyJson());
    }
}
exports.PacketDownReq = PacketDownReq;
class PacketDownRes extends loco_bson_packet_1.LocoBsonResponsePacket {
    constructor(status, Size = 0) {
        super(status);
        this.Size = Size;
    }
    get PacketName() {
        return 'DOWN';
    }
    readBodyJson(rawData) {
        this.Size = rawData['s'];
    }
}
exports.PacketDownRes = PacketDownRes;
//# sourceMappingURL=packet-down.js.map