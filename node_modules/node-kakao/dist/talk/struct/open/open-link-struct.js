"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LinkPrivilegeMask = exports.LinkReactionType = exports.OpenLinkStruct = exports.OpenLinkTagList = exports.OpenLinkTag = exports.OpenLinkTagType = exports.OpenLinkMemberStruct = exports.OpenMemberStruct = exports.OpenKickedMemberStruct = void 0;
const json_proxy_mapper_1 = require("json-proxy-mapper");
var OpenKickedMemberStruct;
(function (OpenKickedMemberStruct) {
    OpenKickedMemberStruct.Mappings = {
        userId: 'userId',
        nickname: 'nickName',
        profileImageUrl: 'pi',
        kickedChannelId: 'c',
        dc: 'dc'
    };
    OpenKickedMemberStruct.MAPPER = new json_proxy_mapper_1.ObjectMapper(OpenKickedMemberStruct.Mappings);
})(OpenKickedMemberStruct = exports.OpenKickedMemberStruct || (exports.OpenKickedMemberStruct = {}));
var OpenMemberStruct;
(function (OpenMemberStruct) {
    OpenMemberStruct.Mappings = {
        userId: 'userId',
        nickname: 'nickName',
        profileImageUrl: 'pi',
        originalProfileImageUrl: 'opi',
        fullProfileImageUrl: 'fpi',
        openToken: 'opt',
        type: 'type',
        linkId: 'pli',
        memberType: 'mt'
    };
    OpenMemberStruct.MAPPER = new json_proxy_mapper_1.ObjectMapper(OpenMemberStruct.Mappings);
})(OpenMemberStruct = exports.OpenMemberStruct || (exports.OpenMemberStruct = {}));
var OpenLinkMemberStruct;
(function (OpenLinkMemberStruct) {
    OpenLinkMemberStruct.Mappings = {
        userId: 'userId',
        nickname: 'nn',
        profileImageUrl: 'pi',
        originalProfileImageUrl: 'opi',
        fullProfileImageUrl: 'fpi',
        memberType: 'lmt',
        profileType: 'ptp',
        linkId: 'pli',
        openToken: 'opt',
        privilege: 'pv'
    };
    OpenLinkMemberStruct.MAPPER = new json_proxy_mapper_1.ObjectMapper(OpenLinkMemberStruct.Mappings);
})(OpenLinkMemberStruct = exports.OpenLinkMemberStruct || (exports.OpenLinkMemberStruct = {}));
var OpenLinkTagType;
(function (OpenLinkTagType) {
    OpenLinkTagType[OpenLinkTagType["DESCRIPTION"] = 1] = "DESCRIPTION";
    OpenLinkTagType[OpenLinkTagType["HASH_TAG"] = 2] = "HASH_TAG";
})(OpenLinkTagType = exports.OpenLinkTagType || (exports.OpenLinkTagType = {}));
var OpenLinkTag;
(function (OpenLinkTag) {
    OpenLinkTag.Mappings = {
        type: 't',
        content: 'c'
    };
    OpenLinkTag.MAPPER = new json_proxy_mapper_1.ObjectMapper(OpenLinkTag.Mappings);
})(OpenLinkTag = exports.OpenLinkTag || (exports.OpenLinkTag = {}));
var OpenLinkTagList;
(function (OpenLinkTagList) {
    OpenLinkTagList.Mappings = {
        tags: 'tags'
    };
    OpenLinkTagList.ConvertMap = {
        tags: new json_proxy_mapper_1.Converter.Array(OpenLinkTag.Mappings)
    };
    OpenLinkTagList.MAPPER = new json_proxy_mapper_1.ObjectMapper(OpenLinkTagList.Mappings);
})(OpenLinkTagList = exports.OpenLinkTagList || (exports.OpenLinkTagList = {}));
var OpenLinkStruct;
(function (OpenLinkStruct) {
    OpenLinkStruct.Mappings = {
        linkId: 'li',
        openToken: 'otk',
        linkName: 'ln',
        linkType: 'lt',
        linkURL: 'lu',
        linkCoverURL: 'liu',
        createdAt: 'ca',
        maxUserLimit: 'ml',
        maxChannelLimit: 'dcl',
        activated: 'ac',
        pushAlert: 'pa',
        passcode: 'pc',
        privilege: 'pv',
        owner: 'olu',
        description: 'desc',
        canSearchLink: 'sc',
        tagList: 'omt'
    };
    OpenLinkStruct.ConvertMap = {
        owner: new json_proxy_mapper_1.Converter.Object(OpenLinkMemberStruct.Mappings),
        tagList: new json_proxy_mapper_1.Converter.Object(OpenLinkTagList.Mappings, OpenLinkTagList.ConvertMap)
    };
    OpenLinkStruct.MAPPER = new json_proxy_mapper_1.ObjectMapper(OpenLinkStruct.Mappings, OpenLinkStruct.ConvertMap);
})(OpenLinkStruct = exports.OpenLinkStruct || (exports.OpenLinkStruct = {}));
var LinkReactionType;
(function (LinkReactionType) {
    LinkReactionType[LinkReactionType["NONE"] = 0] = "NONE";
    LinkReactionType[LinkReactionType["NORMAL"] = 1] = "NORMAL";
})(LinkReactionType = exports.LinkReactionType || (exports.LinkReactionType = {}));
var LinkPrivilegeMask;
(function (LinkPrivilegeMask) {
    LinkPrivilegeMask[LinkPrivilegeMask["URL_SHARABLE"] = 2] = "URL_SHARABLE";
    LinkPrivilegeMask[LinkPrivilegeMask["REPORTABLE"] = 4] = "REPORTABLE";
    LinkPrivilegeMask[LinkPrivilegeMask["PROFILE_EDITABLE"] = 8] = "PROFILE_EDITABLE";
    LinkPrivilegeMask[LinkPrivilegeMask["ANY_PROFILE_ALLOWED"] = 32] = "ANY_PROFILE_ALLOWED";
    LinkPrivilegeMask[LinkPrivilegeMask["USE_PASS_CODE"] = 64] = "USE_PASS_CODE";
    LinkPrivilegeMask[LinkPrivilegeMask["BLINDABLE"] = 128] = "BLINDABLE";
    LinkPrivilegeMask[LinkPrivilegeMask["NON_SPECIAL_LINK"] = 512] = "NON_SPECIAL_LINK";
    LinkPrivilegeMask[LinkPrivilegeMask["USE_BOT"] = 1024] = "USE_BOT";
})(LinkPrivilegeMask = exports.LinkPrivilegeMask || (exports.LinkPrivilegeMask = {}));
//# sourceMappingURL=open-link-struct.js.map