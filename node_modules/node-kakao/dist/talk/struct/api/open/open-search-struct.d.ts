import { OpenStruct } from "./open-struct";
import { Converter, ObjectMapper } from "json-proxy-mapper";
import { OpenLinkType } from "../../../open/open-link-type";
import { StructBase } from "../../struct-base";
import { OpenPostDataStruct, OpenPostDescStruct, OpenPostReactionInfoStruct } from "./open-post-struct";
import { Long } from "bson";
export declare enum OpenSearchType {
    PROFILE = "p",
    DIRECT = "d",
    GROUP = "m"
}
export interface OpenSearchStruct extends OpenStruct {
    page: number;
    count: number;
    totalCount: number;
    itemList: OpenSearchStruct.LinkItem[];
    pageReferrer: string;
}
export declare namespace OpenSearchStruct {
    interface LinkItem extends StructBase {
        linkName: string;
        linkType: OpenLinkType;
        linkURL: string;
        linkImageURL: string;
        locked: boolean;
        memberCount?: number;
        description?: string;
        tagList: string[];
        ownerNickname: string;
        ownerProfileImageURL: string;
        lastChatAt?: number;
        reactCount: number;
    }
    namespace LinkItem {
        const Mappings: {
            linkName: string;
            linkType: string;
            linkURL: string;
            linkImageURL: string;
            memberCount: string;
            description: string;
            tagList: string;
            locked: string;
            ownerNickname: string;
            ownerProfileImageURL: string;
            lastChatAt: string;
            reactCount: string;
        };
        const MAPPER: ObjectMapper;
    }
    interface PostItem extends StructBase {
        id: Long;
        linkId: Long;
        nickname: string;
        profileImageURL: string;
        description?: OpenPostDescStruct;
        postDataList?: OpenPostDataStruct[];
        date: number;
        reactionInfoList: OpenPostReactionInfoStruct[];
    }
    namespace PostItem {
        const Mappings: {
            id: string;
            linkId: string;
            nickname: string;
            profileImageURL: string;
            description: string;
            postDataList: string;
            reactionList: string;
        };
        const ConvertMap: {
            linkId: import("json-proxy-mapper").TypeConverter<Long>;
            description: Converter.Object<object>;
        };
        const MAPPER: ObjectMapper;
    }
    const Mappings: {
        page: string;
        count: string;
        totalCount: string;
        itemList: string;
        pageReferrer: string;
    };
    const ConvertMap: {
        itemList: Converter.Array<object>;
    };
    const MAPPER: ObjectMapper;
}
export interface OpenPostSearchStruct extends OpenStruct {
    page: number;
    count: number;
    totalCount: number;
    postList: OpenSearchStruct.PostItem[];
    pageReferrer: string;
}
export declare namespace OpenPostSearchStruct {
    const Mappings: {
        page: string;
        count: string;
        totalCount: string;
        postList: string;
        pageReferrer: string;
    };
    const ConvertMap: {
        postList: Converter.Array<object>;
    };
    const MAPPER: ObjectMapper;
}
