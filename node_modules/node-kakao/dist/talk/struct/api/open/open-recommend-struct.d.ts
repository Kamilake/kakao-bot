import { OpenStruct } from "./open-struct";
import { StructBase } from "../../struct-base";
import { ObjectMapper, Converter } from "json-proxy-mapper";
import { OpenLinkType } from "../../../open/open-link-type";
import { OpenSearchStruct } from "./open-search-struct";
export declare namespace OpenRecommend {
    interface TagItem extends StructBase {
        tagName: string;
        backgroundColor?: string;
        pageReferrer: string;
    }
    interface LinkItem extends StructBase {
        linkName: string;
        linkType: OpenLinkType;
        linkURL: string;
        linkImageURL: string;
        memberCount: number;
        description: string;
        ownerNickname: string;
        ownerProfileImageURL: string;
        lastChatAt: number;
        reactCount: number;
        pageReferrer: string;
    }
    interface TagList extends StructBase {
        title: string;
        items: TagItem[];
    }
    namespace TagItem {
        const Mappings: {
            tagName: string;
            backgroundColor: string;
            pageReferrer: string;
        };
        const MAPPER: ObjectMapper;
    }
    interface LinkList extends StructBase {
        title: string;
        items: LinkItem[];
    }
    namespace LinkItem {
        const Mappings: {
            linkName: string;
            linkType: string;
            linkURL: string;
            linkImageURL: string;
            memberCount: string;
            description: string;
            ownerNickname: string;
            ownerProfileImageURL: string;
            lastChatAt: string;
            reactCount: string;
            pageReferrer: string;
        };
        const MAPPER: ObjectMapper;
    }
    namespace TagList {
        const Mappings: {
            title: string;
            items: string;
        };
        const ConvertMap: {
            items: Converter.Array<object>;
        };
        const MAPPER: ObjectMapper;
    }
    namespace LinkList {
        const Mappings: {
            title: string;
            items: string;
        };
        const ConvertMap: {
            items: Converter.Array<object>;
        };
        const MAPPER: ObjectMapper;
    }
}
export interface OpenRecommendStruct extends OpenStruct {
    tag: OpenRecommend.TagList;
    linkList: OpenRecommend.LinkList[];
}
export declare namespace OpenRecommendStruct {
    const Mappings: {
        tag: string;
        linkList: string;
    };
    const ConvertMap: {
        tag: Converter.Object<object>;
        linkList: Converter.Array<object>;
    };
    const MAPPER: ObjectMapper;
}
export interface OpenPostRecommendStruct extends OpenStruct {
    title: string;
    postList: OpenSearchStruct.PostItem[];
}
export declare namespace OpenPostRecommendStruct {
    const Mappings: {
        title: string;
        postList: string;
    };
    const ConvertMap: {
        postList: Converter.Array<object>;
    };
    const MAPPER: ObjectMapper;
}
