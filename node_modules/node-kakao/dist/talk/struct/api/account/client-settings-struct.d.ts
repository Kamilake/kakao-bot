import { WebApiStruct } from "../../web-api-struct";
import { StructBase } from "../../struct-base";
export interface OpenChatSettingsStruct extends StructBase {
    chatMemberMaxJoin: number;
    chatRoomMaxJoin: number;
    createLinkLimit: 10;
    createCardLinkLimit: 3;
    numOfStaffLimit: 5;
    rewritable: boolean;
    handoverEnabled: boolean;
}
export interface MoreSettingsStruct extends WebApiStruct {
    since: number;
    clientConf: {
        osVersion: string;
    };
    available: number;
    available2: number;
    friendsPollingInterval: number;
    settingsPollingInterval: number;
    profilePollingInterval: number;
    moreListPollingInterval: number;
    morePayPollingInterval: number;
    daumMediaPollingInterval: number;
    lessSettingsPollingInterval: number;
    moreApps: {
        recommend: any[];
        all: any[];
    };
    shortcuts: {
        [menu: string]: number;
    }[];
    seasonProfileRev: number;
    seasonNoticeRev: number;
    serviceUserId: number;
    accountId: number;
    accountDisplayId: string;
    hashedAccountId: string;
    pstnNumber: string;
    formattedPstnNumber: string;
    nsnNumber: string;
    formattedNsnNumber: string;
    contactNameSync: number;
    allowMigration: boolean;
    emailStatus: number;
    emailAddress: string;
    emailVerified: boolean;
    uuid: string;
    uuidSearchable: boolean;
    nickName: string;
    openChat: OpenChatSettingsStruct;
    profileImageUrl: string;
    fullProfileImageUrl: string;
    originalProfileImageUrl: string;
    statusMessage: string;
}
export interface LessSettingsStruct extends WebApiStruct {
    kakaoAutoLoginDomain: string[];
    daumSsoDomain: string[];
    googleMapsApi: {
        key: string;
        signature: string;
    };
    chat_report_limit: {
        chat: number;
        open_chat: number;
        plus_chat: number;
    };
    externalApiList: {};
    birthday_friends: {
        landing_url: string;
    };
    messageDeleteTime: number;
    voiceTalk: {
        groupCallMaxParticipants: number;
    };
    profileActions: boolean;
    postExpirationSetting: {
        flagOn: boolean;
        newPostTerm: number;
    };
    kakaoAlertIds: number[];
}
