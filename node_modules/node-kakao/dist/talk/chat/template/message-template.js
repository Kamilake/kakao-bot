"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReplyContentTemplate = exports.AttachmentTemplate = void 0;
const json_util_1 = require("../../../util/json-util");
const chat_builder_1 = require("../chat-builder");
class AttachmentTemplate {
    constructor(attachment, ...textFormat) {
        this.attachment = attachment;
        let msg = chat_builder_1.ChatBuilder.buildMessage(...textFormat);
        this.packetText = msg.text;
        this.textExtra = msg.extra;
    }
    get Attachment() {
        return this.attachment;
    }
    set Attachment(attachment) {
        this.attachment = attachment;
    }
    get Text() {
        return this.packetText;
    }
    setText(...textFormat) {
        let msg = chat_builder_1.ChatBuilder.buildMessage(...textFormat);
        this.packetText = msg.text;
        this.textExtra = msg.extra;
    }
    getType() {
        return this.attachment.RequiredMessageType;
    }
    getText() {
        return this.packetText;
    }
    getRawExtra() {
        return Object.assign(Object.assign({}, this.textExtra), this.attachment.toJsonAttachment());
    }
    getExtra() {
        return json_util_1.JsonUtil.stringifyLoseless(this.getRawExtra());
    }
}
exports.AttachmentTemplate = AttachmentTemplate;
class ReplyContentTemplate extends AttachmentTemplate {
    constructor(reply, content, ...textFormat) {
        super(reply, ...textFormat);
        this.content = content;
    }
    getReplyContent() {
        return {
            'attach_type': this.content.RequiredMessageType,
            'attach_content': this.content.toJsonAttachment()
        };
    }
    getRawExtra() {
        return Object.assign(super.getRawExtra(), this.getReplyContent());
    }
}
exports.ReplyContentTemplate = ReplyContentTemplate;
//# sourceMappingURL=message-template.js.map