import { FeedType } from "../feed/feed-type";
import { Long } from "bson";
import { StructBase } from "../struct/struct-base";
export declare namespace FeedFragment {
    interface Member extends StructBase {
        readonly member: FeedMemberStruct;
    }
    interface MemberList extends StructBase {
        readonly members: FeedMemberStruct[];
    }
    interface Inviter extends StructBase {
        readonly inviter: FeedMemberStruct;
    }
    interface Message extends StructBase {
        readonly logId: Long;
    }
    interface OpenHandOver extends StructBase {
        readonly prevHost: FeedMemberStruct;
        readonly newHost: FeedMemberStruct;
    }
}
export interface FeedMemberStruct extends StructBase {
    userId: Long;
    nickName: string;
}
export interface ChatFeed<T extends FeedType = FeedType> extends StructBase {
    readonly feedType: T;
    readonly hidden?: boolean;
}
export declare namespace ChatFeed {
    function getFeedFromText<T extends ChatFeed = ChatFeed>(raw: string): T;
}
export declare type InviteFeed = ChatFeed<FeedType.INVITE> & FeedFragment.Inviter & FeedFragment.MemberList;
export declare type LeaveFeed = ChatFeed<FeedType.LEAVE> & FeedFragment.Member;
export declare type RichContentFeed = ChatFeed<FeedType.RICH_CONTENT>;
export declare type OpenJoinFeed = ChatFeed<FeedType.OPENLINK_JOIN> & FeedFragment.MemberList;
export declare type OpenLinkDeletedFeed = ChatFeed<FeedType.OPENLINK_DELETE_LINK>;
export declare type OpenRewriteFeed = ChatFeed<FeedType.OPENLINK_REWRITE_FEED> & FeedFragment.Member & FeedFragment.Message;
export declare type OpenKickFeed = ChatFeed<FeedType.OPENLINK_KICKED> & FeedFragment.Member;
export declare type OpenHandOverHostFeed = ChatFeed<FeedType.OPENLINK_HAND_OVER_HOST> & FeedFragment.OpenHandOver;
export declare type OpenManagerGrantFeed = ChatFeed<FeedType.OPEN_MANAGER_GRANT> & FeedFragment.Member;
export declare type OpenManagerRevokeFeed = ChatFeed<FeedType.OPEN_MANAGER_REVOKE> & FeedFragment.Member;
export declare type ChannelDeletedFeed = ChatFeed<FeedType.CHANNEL_DELETED>;
export declare type DeleteAllFeed = ChatFeed<FeedType.DELETE_TO_ALL> & FeedFragment.Message;
export declare type OpenLinkFeeds = OpenJoinFeed | OpenLinkDeletedFeed | OpenRewriteFeed | OpenKickFeed | OpenHandOverHostFeed | OpenManagerGrantFeed | OpenManagerRevokeFeed;
export declare type ChatFeeds = InviteFeed | LeaveFeed | RichContentFeed | OpenLinkFeeds | ChannelDeletedFeed | DeleteAllFeed;
