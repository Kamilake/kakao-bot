import { IdInstanceStore } from "../../store/store";
import { ChatUser, ChatUserInfo, OpenChatUserInfo } from "./chat-user";
import { Long } from "bson";
import { LocoClient } from "../../client";
import { MemberStruct } from "../struct/member-struct";
import { OpenMemberStruct } from "../struct/open/open-link-struct";
import { ChatChannel } from "../channel/chat-channel";
import { ManagedChatUser } from "../managed/managed-chat-user";
import { RequestResult } from "../request/request-result";
export declare class UserManager extends IdInstanceStore<ChatUser> {
    private client;
    constructor(client: LocoClient);
    get Client(): LocoClient;
    protected createInstanceFor(key: Long): ManagedChatUser;
    get(key: Long): ChatUser;
    getInfoFromStruct(memberStruct: MemberStruct | OpenMemberStruct): ChatUserInfo | OpenChatUserInfo;
    requestAllUserInfoList(channel: ChatChannel): Promise<RequestResult<ChatUserInfo[]>>;
    requestUserInfoList(channel: ChatChannel, idList: Long[]): Promise<RequestResult<ChatUserInfo[]>>;
    requestUserInfo(channel: ChatChannel, id: Long): Promise<RequestResult<ChatUserInfo>>;
    initializeClient(): void;
}
